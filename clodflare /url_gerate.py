import os
import sys
import urllib.request
import subprocess
import re

# Configura√ß√µes
pasta_destino = r"C:\cloudflare"
arquivo_exe = "cloudflared.exe"
url_download = "https://raw.githubusercontent.com/Giuseph66/testes_novos/main/clodflare%20/cloudflared.exe"
porta_local = 3000

# Caminho completo do execut√°vel
caminho_executavel = os.path.join(pasta_destino, arquivo_exe)

# 1. Criar a pasta, se necess√°rio
if not os.path.exists(pasta_destino):
    print(f"üìÅ Pasta n√£o encontrada. Criando: {pasta_destino}")
    try:
        os.makedirs(pasta_destino)
    except Exception as e:
        print(f"‚ùå Erro ao criar a pasta: {e}")
        sys.exit(1)

# 2. Baixar o cloudflared.exe, se n√£o existir
if not os.path.isfile(caminho_executavel):
    print(f"‚¨áÔ∏è Baixando cloudflared.exe de:\n{url_download}")
    try:
        urllib.request.urlretrieve(url_download, caminho_executavel)
        print(f"‚úÖ Download conclu√≠do: {caminho_executavel}")
    except Exception as e:
        print(f"‚ùå Erro ao baixar o arquivo: {e}")
        sys.exit(1)
else:
    print(f"‚úÖ Execut√°vel j√° existe: {caminho_executavel}")

# 3. Executar o t√∫nel
cmd = [caminho_executavel, "tunnel", "--url", f"http://localhost:{porta_local}"]
print(f"üöÄ Iniciando t√∫nel para localhost:{porta_local}...\n")

try:
    process = subprocess.Popen(
        cmd,
        stdout=subprocess.PIPE,
        stderr=subprocess.STDOUT,
        universal_newlines=True
    )

    # 4. Ler a sa√≠da e capturar a URL
    for line in process.stdout:
        print(line.strip())
        match = re.search(r"https://[a-zA-Z0-9-]+\.trycloudflare\.com", line)
        if match:
            url = match.group()
            print(f"\nüîó URL p√∫blica gerada:\n{url}")
            break

except Exception as e:
    print(f"‚ùå Erro ao executar o t√∫nel: {e}")
    sys.exit(1)
